% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/role_analysis.R
\name{role_analysis}
\alias{role_analysis}
\title{Positional (Role) Analysis in Networks (`role_analysis`)}
\usage{
role_analysis(
  graph,
  nodes = node_measures,
  directed = NA,
  method = "cluster",
  min_partitions = NA,
  max_partitions = NA,
  min_partition_size = NA,
  backbone = 0.9,
  viz = FALSE,
  fast_triad = TRUE,
  retain_variables = FALSE,
  cluster_summaries = FALSE,
  self_ties = FALSE,
  cutoff = 0.999,
  max_iter = 50
)
}
\arguments{
\item{graph}{An igraph object or a list of igraph objects produced as output from `netwrite`.}

\item{nodes}{A data frame containing individual-level network measures for each node in the network. Ideally, the `node_measures` data frame produced by `netwrite` should be assigned to this argument.}

\item{directed}{A logical value indicating whether network edges should be treated as direected.}

\item{method}{A character value indicating the method used for positional analysis. Valid arguments are currently `"cluster"` for hierarchical clustering and `"concor"` for CONCOR.}

\item{min_partitions}{A numeric value indicating the number of minimum number of clusters or partitions to assign to nodes in the network. When using hierarchical clustering, this value reflects the minimum number of clusters produced by analysis. When using CONCOR, this value reflects the minimum number of partitions produced in analysis, such that a value of 1 results in a partitioning of two groups, a value of 2 results in four groups, and so on.}

\item{max_partitions}{A numeric value indicating the number of maximum number of clusters or partitions to assign to nodes in the network. When using hierarchical clustering, this value reflects the maximum number of clusters produced by analysis. When using CONCOR, this value reflects the maximum number of partitions produced in analysis, such that a value of 1 results in a partitioning of two groups, a value of 2 results in four groups, and so on.}

\item{min_partition_size}{A numeric value indicating the minimum number of nodes required for inclusion in a cluster. If an inferred cluster or partition contains fewer nodes than the number assigned to `min_partition_size`, nodes in this cluster/partition will be labeled as members of a parent cluster/partition.}

\item{backbone}{A numeric value ranging from 0-1 indicating which edges in the similarity/correlation matrix should be kept when calculating modularity of cluster/partition assignments. When calculating optimal modularity, it helps to backbone the similarity/correlation matrix according to the nth percentile. Larger networks benefit from higher `backbone` values, while lower values generally benefit smaller networks.}

\item{viz}{A logical value indicating whether to produce summary visualizations of the positional analysis.}

\item{fast_triad}{(Hierarchical clustering method only.) A logical value indicating whether to use an faster method for counting individual nodes' positions in different types of triads. This faster method may lead to memory issues and should be avoided when working with larger networks.}

\item{retain_variables}{(Hierarchical clustering method only.) A logical value indicating whether output should include a data frame of all node-level measures used in hierarchical clustering.}

\item{cluster_summaries}{(Hierarchical clustering method only.) A logical value indicating whether output should includde a data frame containing by-cluster mean values of variables used in hierarchical clustering.}

\item{self_ties}{(CONCOR only.) A logical value indicting whether to include self-loops (ties directed toward oneself) in CONCOR calculation.}

\item{cutoff}{(CONCOR only.) A numeric value ranging from 0 to 1 that indicates the correlation cutoff for detecting convergence in CONCOR calculation.}

\item{max_iter}{(CONCOR only.) A numeric value indicating the maximum number of iteractions allowed for CONCOR calculattion.}
}
\description{
The `role_analysis` function takes networks processed by the `netwrite` function and performs positional analysis on them. Positional analysis methods allows users to infer distinct "roles" in networks from patterns in network activity. `role_analysis` currently supports the identification of roles using two methods: hierarchical clustering (cite) and convergence of correlations (CONCOR, Breiger 1975).
}
\examples{
netwrite(data_type = "edgelist",
         nodelist = node_dataframe,
         node_id = "id",
         i_elements = edge_dataframe$ego,
         j_elements = edge_dataframe$alter,
         weights = edge_dataframe$weight,
         type = edge_dataframe$relation_type,
         directed = TRUE)


role_analysis
}
