% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qap_setup.R
\name{qap_setup}
\alias{qap_setup}
\title{Individual to Dyadic variable transformation (`qap_setup`).}
\usage{
qap_setup(net, variables, methods, directed = F, additional_vars = NULL)
}
\arguments{
\item{net}{An `igraph` or `network` object.}

\item{variables}{A vector of strings naming attributes to be transformed from individual-level to dyadic-level.}

\item{methods}{A vector of strings naming methods to be applied to the `variables` vector. The `methods` vector must be the same length as the `variables` vector. Methods are applied in order (e.g, first method is applied to the first named attribute in `variables`)}

\item{directed}{A logical statement identifying if the network should be treated as directed. Defaults to False.}

\item{additional_vars}{A data frame containing additional individual-level variables not contained in the primary network input. Additional dataframe must contain an `id` or `label` variables which matches network exactly.}
}
\value{
`qap_setup` returns a list `qap_results` of elements that include:

- `qap_graph`, an updated `igraph` object containing the newly constructed dyadic variables and additional individual-level variables.

- `nodes`, a nodelist reflecting additional variables if included.

- `edges`, a nodelist reflecting new dyadic variables.
}
\description{
The `qap_setup` function transform an individual level attributes into dyadic comparisons following a set of methods. Output can be used to compute QAP measurements using sister functions in IDEAnet package.
}
\examples{
data("florentine", package = "ideanet")

 ideanet::netwrite(i_elements = florentine$node,
                   j_elements = florentine$target,
                   directed = FALSE,
                   net_name = "florentine_graph")

ideanet::qap_setup(florentine_graph, variables = c("total_degree"), methods = c("difference"))
}
